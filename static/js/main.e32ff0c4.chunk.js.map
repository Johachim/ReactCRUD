{"version":3,"sources":["Firebase/config.js","composables/useFetch.jsx","composables/useDocument.jsx","components/Card.jsx","components/Create.jsx","components/App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","timestamp","auth","storage","FieldValue","serverTimestamp","useFetch","collection","useState","data","setData","isPending","setIsPending","error","setError","useEffect","orderBy","onSnapshot","snap","results","docs","forEach","doc","createdAt","push","id","err","console","log","message","useDocument","loading","setLoading","add","values","a","deleteDoc","docRef","delete","update","newValues","name","Card","props","setName","value","onChange","e","target","onClick","Create","addName","type","App","className","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e32ff0c4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDjw4aU33bATYcGf_2ByD9Asc23Vbs8Sbo\",\r\n  authDomain: \"react-base-626cd.firebaseapp.com\",\r\n  projectId: \"react-base-626cd\",\r\n  storageBucket: \"react-base-626cd.appspot.com\",\r\n  messagingSenderId: \"979039453640\",\r\n  appId: \"1:979039453640:web:043007dc634265a53e80fd\",\r\n  measurementId: \"G-1NZS1XJBN2\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst projectAuth = firebase.auth();\r\nconst projectStorage = firebase.storage();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp\r\n\r\nexport { db, projectAuth, projectStorage, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport { db } from \"../Firebase/config\";\r\n\r\nconst useFetch = (collection) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let collectionRef = db.collection(\"persons\").orderBy('createdAt');\r\n\r\n    collectionRef.onSnapshot(\r\n      (snap) => {\r\n        let results = [];\r\n        snap.docs.forEach((doc) => {\r\n          // must wait for the server to create the timestamp & send it back\r\n          doc.data().createdAt && results.push({ ...doc.data(), id: doc.id });\r\n        });\r\n\r\n        // update values\r\n        setIsPending(false);\r\n        setData(results);\r\n        setError(null);\r\n      },\r\n      (err) => {\r\n        console.log(err.message);\r\n        setData(null);\r\n        setError(\"could not fetch the data\");\r\n      }\r\n    );\r\n  }, [collection]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useState } from \"react\";\r\nimport { db } from \"../Firebase/config\";\r\n\r\nconst useDocument = (id) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const [loading, setLoading] = useState(null);\r\n\r\n  \r\n  const deleteDoc = () => {\r\n    let docRef = db.collection(\"persons\").doc(id);\r\n    try {\r\n      const res = docRef.delete();\r\n      return res;\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const add = async values => {\r\n    setLoading(true)\r\n\r\n    try {\r\n       db.collection(\"persons\").add(values)\r\n    } catch (err) {\r\n      setError(err.message)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  \r\n  const update = async (id, newValues) => {\r\n    console.log(id, newValues);\r\n    setLoading(true);\r\n    try {\r\n      db.collection(\"persons\").doc(id).update({ name: newValues });\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { error, deleteDoc, update, loading, add };\r\n};\r\n\r\nexport default useDocument;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport useDocument from \"../composables/useDocument\";\r\n\r\nconst Card = (props) => {\r\n  const [name, setName] = useState(props.data.name);\r\n\r\n  const { deleteDoc, update } = useDocument(\"\", props.data.id);\r\n\r\n  const handleChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input value={name} onChange={handleChange} />\r\n      <button onClick={() => {deleteDoc();}}>\r\n        Delete\r\n      </button>\r\n      <button onClick={() => {update(props.data.id, name);}}>\r\n        Edit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, {useState} from \"react\";\r\nimport useDocument from \"../composables/useDocument\";\r\nimport {timestamp} from \"../Firebase/config\"\r\n\r\nconst Create = () => {\r\n\r\n  const [name, addName] = useState(\"\");\r\n  const {add} = useDocument(\"\")\r\n  \r\n  const handleChange = (e) =>{\r\n   addName(e.target.value);\r\n  }\r\n  \r\n  const handleCreate = () => {\r\n    add({name: name, createdAt: timestamp()})\r\n    addName(\"\")\r\n  }\r\n\r\n  return(\r\n    <div>\r\n    ADD: <input type=\"text\" value={name} onChange={handleChange}/> \r\n    <button onClick={()=>{handleCreate()}}>Create</button>\r\n    </div>\r\n    )\r\n    \r\n  }\r\n  \r\n  export default Create;","import React from \"react\";\nimport useFetch from \"../composables/useFetch\";\nimport Card from \"./Card\";\nimport Create from \"./Create\"; \n\n\nconst App = () => {\n\n  const { error, isPending, data } = useFetch('messages')\n\n  return (\n    <div className=\"home\">\n      <Create/>\n      <br/>\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> } \n      { data && data.map((data, index) => <Card key={index} data={data}/>)}\n    </div>\n  )\n  }\n\nexport default App;  \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}